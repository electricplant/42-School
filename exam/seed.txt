include
	unistd
	sys/wait
	string
	stdlib

ft_putstr_fd2(str and arg)
	while *str
		write (2, str++, 1);
	if (arg)
		while (*arg)

ft_execute(argv, i, tmp_fd, env)
	argv[i] = NULL
	dup2(tmp_fd, STDIN_FILENO)
	close(tmp_fd)
	execve(argv[0], argv, env)
	ft_putstr_fd2(error cannot exexcute, argv[0])
	exit (1)

main(all 3)
	i, fd[2], tmp_fd, (void)argc

	i = 0;
	tmp_fd = dup(STDIN_FILENO)

	while ( argv[i] and argv[i + 1] )
		argv = address of argv[i + 1]
		i = 0

		while ( argv[i] and strcmp(argv[i], ";")  and "|" )
			i++

		if (strcmp 0 "cd")
			if (i is not 2)
				ft_putstr_fd2(error bad arg)
			else if (chdir(argv[1] is not 0))
				ft_putstr_fd2(error cannot change directory)

		else if ( i is not 0 and argv[i] is NULL or ";" == 0 )

			if (fork() == 0)
				ft_execute()
			else
				close (tmp_fd)
				while ( waitpid ( -1, NULL, WUNTRACED) is not 1 )
					;
				tmp_fd = dup(STDIN_FILENO)
		
		else if ( i is not 0 and "|" == 0 )

			pipe (fd)
			if fork() == 0
				dup2 fd1 , STDOUT_FILENO
				close fd 0 
				close fd 1
				ft_execute()
		
		else

			close fd 1
			close tmp_fd
			tmp_fd = fd 0

close tmp_fd

